- name: Criando o Sec Group
  local_action:
    module: ec2_group
    name: "{{ sec_group_name }}"
    description: SG giropops
    profile: "{{ profile }}"
    region: "{{ region }}"
    rules:
    - proto: tcp
      from_port: 22
      to_port: 22
      cidr_ip: 0.0.0.0/0
      rule_desc: Acesso Remoto SSH
    - proto: tcp
      from_port: 2379
      to_port: 2380
      cidr_ip: 0.0.0.0/0
      rule_desc: etcd server API
    - proto: tcp
      from_port: 6443
      to_port: 6443
      cidr_ip: 0.0.0.0/0
      rule_desc: kube-apiserver
    - proto: tcp
      from_port: 10250
      to_port: 10250
      cidr_ip: 0.0.0.0/0
      rule_desc: Kubelet API
    - proto: tcp
      from_port: 10251
      to_port: 10251
      cidr_ip: 0.0.0.0/0
      rule_desc: kube-scheduler
    - proto: tcp
      from_port: 10252
      to_port: 10252
      cidr_ip: 0.0.0.0/0
      rule_desc: kube-controller-manager
    - proto: tcp
      from_port: 10255
      to_port: 10255
      cidr_ip: 0.0.0.0/0
      rule_desc: Kubelet API Read-only
    - proto: tcp
      from_port: 30000
      to_port: 32767
      cidr_ip: 0.0.0.0/0
      rule_desc: NodePort Services
    - proto: tcp
      from_port: 6783
      to_port: 6783
      cidr_ip: 0.0.0.0/0
      rule_desc: WeaveNet
    - proto: udp
      from_port: 6783
      to_port: 6783
      cidr_ip: 0.0.0.0/0
      rule_desc: Weavenet
    - proto: udp
      from_port: 6784
      to_port: 6784
      cidr_ip: 0.0.0.0/0
      rule_desc: Weavenet
    rules_egress:
    - proto: all
      cidr_ip: 0.0.0.0/0

- name: Criando as instancias EC2
  local_action:
    module: ec2
    group: "{{ sec_group_name }}"
    instance_type: "{{ instance_type }}"
    image: "{{ image }}"
    profile: "{{ profile }}"
    wait: true
    region: "{{ region }}"
    key_name: "{{ key_name }}"
    count: "{{ count }}" 
  register: ec2

- name: Adicionando as instancias ao inventario temporário
  add_host:
    name: "{{ item.public_ip }}"
    groups: giropops
  loop: "{{ ec2.instances }}"

- name: Limpando IPs do arquivo hosts
  local_action:
    module: lineinfile
    path: hosts
    regexp: "^[0-9]"
    state: absent

- name: Removendo variável K8S_MASTER_NODE_IP
  local_action:
    module: lineinfile
    path: hosts
    regexp: "^K8S_MASTER_NODE_IP"
    state: absent

- name: Configurando grupo k8s_master
  local_action:
    module: lineinfile
    path: hosts
    insertafter: "k8s_master"
    line: "{{ item.public_ip }}"
  loop: "{{ ec2.instances }}"
  when: item.ami_launch_index|int == 0

- name: Configurando a variável K8S_MASTER_NODE_IP
  local_action:
    module: lineinfile
    path: hosts
    insertafter: "k8s_workers:vars"
    line: "K8S_MASTER_NODE_IP={{ item.private_ip }}"
  loop: "{{ ec2.instances }}"
  when: item.ami_launch_index|int == 0

- name: Configurando grupo k8s_workers
  local_action:
    module: lineinfile
    path: hosts
    insertafter: "k8s_workers"
    firstmatch: true
    line: "{{ item.public_ip }}"
  loop: "{{ ec2.instances }}"
  when: item.ami_launch_index|int > 0

- name: Esperando o SSH
  local_action:
    module: wait_for
    host: "{{ item.public_ip }}"
    port: 22
    state: started
  loop: "{{ ec2.instances }}" 

- name: Adicionando uma tag nas instancias
  local_action:
    module: ec2_tag
    resource: "{{ item.id }}"
    region: "{{ region }}"
    profile: "{{ profile }}"
    state: present
  loop: "{{ ec2.instances }}" 
  args:
    tags:
      Name: ansible-{{ item.ami_launch_index|int + 1 }}